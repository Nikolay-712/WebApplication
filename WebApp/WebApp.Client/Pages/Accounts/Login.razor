@page "/login"
@inject IAccountClientService _accountClient
@inject NavigationManager _navigationManager

<PageTitle>Log in</PageTitle>

<div class="row">
    <div class="col-md-6">
        <section>
            <EditForm Model="RequestModel" method="post" OnValidSubmit="LoginAsync">
                <FluentValidationValidator />
                <h2>Use a local account to log in.</h2>
                <hr />

                <DisplayErrorMessage Message="@ErrorMessage" />

                <div class="form-floating mb-3">
                    <InputText @bind-Value="RequestModel.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label for="email" class="form-label">Email</label>
                    <ValidationMessage For="() => RequestModel.Email" class="text-danger" />
                </div>
                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="RequestModel.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label for="password" class="form-label">Password</label>
                    <ValidationMessage For="() => RequestModel.Password" class="text-danger" />
                </div>
                <div class="checkbox mb-3">
                    <label class="form-label">
                        <InputCheckbox @bind-Value="RequestModel.RememberMe" class="darker-border-checkbox form-check-input" />
                        Remember me
                    </label>
                </div>
                @if (IsConfirmedEmail)
                {
                    <div>
                        <button type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                    </div>

                    <div>
                        <p>
                            <a href="account/forget-password">Forgot your password?</a>
                        </p>
                    </div>
                }
            </EditForm>

            @if (!IsConfirmedEmail)
            {
                <div class="alert alert-primary" role="alert">
                    <p> Your email address is not verified. Please check your email to confirm your email address</p>
                    <hr>
                    <p>If you have not received a confirmation email, click the button to receive a new one</p>
                    <button @onclick="ResendEmailAsync" class="w-100 btn btn-lg btn-primary">Resend email</button>
                </div>
            }
        </section>
    </div>
</div>



@code {
    private LoginRequestModel RequestModel = new();

    private ResponseContent<LoginResponseModel> LoginResponse = new();
    private ResponseContent EmailSenderResponse = new();

    private string ErrorMessage = string.Empty;
    private bool IsConfirmedEmail = true;

    private async Task LoginAsync()
    {
        LoginResponse = await _accountClient.LoginAsync(RequestModel);

        if (LoginResponse.ErrorResponse is not null)
        {
            ErrorMessage = LoginResponse.ErrorResponse.Message;
            return;
        }

        if (LoginResponse.Result is not null)
        {
            ErrorMessage = string.Empty;
            IsConfirmedEmail = LoginResponse.Result.IsConfirmedEmail;
            if (IsConfirmedEmail)
            {
                //Add Jwt token to local storage and change authentication state
                _navigationManager.NavigateTo("/");
                return;
            }
        }
    }

    private async Task ResendEmailAsync()
    {
        if (string.IsNullOrEmpty(RequestModel.Email))
        {
            ErrorMessage = "Provide valid email address";
            return;
        }

        EmailSenderResponse = await _accountClient.ResendEmailConfirmationAsync(RequestModel.Email);
        if (EmailSenderResponse.ErrorResponse is not null)
        {
            ErrorMessage = EmailSenderResponse.ErrorResponse.Message;
            return;
        }

        _navigationManager.NavigateTo("login");
    }
}
